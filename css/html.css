/* :root {
  --blue: #{$blue};
  --green: #{$green};
  --red: #{$red};
  --yellow: #{$yellow};

  --highlight: #{$highlight};
  --stroke: #{$stroke};
  --success: #{$green};
  --error: #{$red};
  --warning: var(--yellow);
} */

html {
  box-sizing: border-box;
  text-size-adjust: 100%;
  text-rendering: optimizeSpeed;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html, body, div, form, fieldset, legend, label {
  margin: 0;
  padding: 0; 
}

h1, h2, h3, h4, h5, h6, th, td, caption {
  font-weight: normal;
}

p,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
figure,
blockquote,
pre {
  margin: 0 0 1rem;

  &:last-child {
    margin-bottom: 0;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.25;
  font-weight: 700;
}

h1 {
 font-size: clamp(2.25rem, 6vw, 3.75rem);
}
h2 {
 font-size: clamp(2rem, 5vw, 3rem);
}
h3 {
 font-size: clamp(1.75rem, 4vw, 2.5rem);
}
h4 {
 font-size: clamp(1.5rem, 3vw, 1.75rem);
}
h5 {
 font-size: 1.25rem;
}
h6 {
 font-size: 1.125rem;
}

a,
button {
  backface-visibility: hidden; // Helps prevent flickers on color transitions
  transition-property: color, background, filter;
  transition-duration: 0.3s;
  transition-timing-function: ease;
  cursor: pointer;

/*   &:hover,
  &:focus {
    filter: brightness(120%);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;

    &:hover {
      /* Leave :focus effect for keyboard users */
      filter: none;
    }
  } */
}

a {
  text-decoration: none;
}

button {
  font: inherit;
  -webkit-font-smoothing: inherit;
  color: inherit;
  letter-spacing: inherit;
}

img,
figure,
iframe,
svg {
  vertical-align: middle;
  max-width: 100%;
  height: auto;
}

/* Let SVG scale without boundaries */
/* img[src$=".svg"] {
  width: 100%;
  height: auto;
  max-width: none;
} */

svg {
  fill: currentColor;
  stroke: currentColor;
  stroke-width: 0;

  /* Prevent clicks on SVG's inside links and buttons */
  a &,
  button & {
    pointer-events: none;
  }
}

fieldset {
  border: 0;
}

input,
select,
textarea {
  font: inherit;
  color: inherit;
  letter-spacing: inherit;
}
input:not(
  input[type="checkbox"],
  input[type="radio"],
  input[type="file"],
  input[type="image"],
  input[type="button"],
  input[type="reset"],
  input[type="submit"]
), select, textarea {
  width: 100%;
  max-width: 100%;
  border: 1px solid;
  padding: 2px;
}
select {
  appearance: none;
  background: #fff;
}
textarea {
  height: initial;
  resize: vertical;
}
select {
  appearance: none;
  padding-right: 2em;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="8"><path fill="black" d="M0 0 H16 L8 8 Z"/></svg>') right 0.6em center / .8em no-repeat, #fff;
}

/* input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button,
input[type="search"] {
  appearance: none;
}

input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  display: none;
} */

:disabled {
  opacity: 0.8;
  cursor: not-allowed;
}
/* Needs the :not qualifier for specificity */
input:not(x)[readonly] {
  border-style: dotted;
  cursor: not-allowed;
}

small {
  font-size: 80%;
}

table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

pre {
  overflow: auto;
  white-space: pre-wrap;
}

/* ::-moz-focus-inner {
  border: 0;
  padding: 0;
} */

[id] {
  scroll-margin-top: 2ex;
}

/* Text highlight effect */
::selection {
  color: #fff;
  background: $highlight;
}

@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-delay: -1ms !important;
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    background-attachment: initial !important;
    scroll-behavior: auto !important;
    transition-delay: 0s !important;
    transition-duration: 0s !important;
  }
}
